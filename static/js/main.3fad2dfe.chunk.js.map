{"version":3,"sources":["components/OrganizationInfo.tsx","redux-saga/repoSlice.ts","components/SearchBar.tsx","components/Repository.tsx","components/LoadingSpinner.tsx","helpers/Error.tsx","components/Repositories.tsx","redux-saga/saga.ts","helpers/consts.ts","redux-saga/store.ts","App.tsx","index.tsx"],"names":["OrganizationInfo","repos","useSelector","state","repositories","isLoading","length","className","src","owner","avatar_url","alt","login","repoSlice","createSlice","name","initialState","fetchError","reducers","fetchDataRequest","fetchDataSuccess","action","payload","fetchDataFail","actions","SearchBar","org","setOrg","useState","dispatch","useDispatch","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","trim","Repository","title","url","forksCount","watchersCount","starsCount","href","id","LoadingSpinner","Error","Repositories","currentPage","setCurrentPage","lastRepo","firstRepo","currentPageRepos","slice","pageNumbers","i","Math","ceil","push","useEffect","map","repo","html_url","forks_count","watchers_count","stargazers_count","number","onClick","window","scrollTo","getReposRequest","axios","get","headers","Accept","getRepos","response","call","put","data","error","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","middleware","run","takeLatest","App","dotenv","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.3fad2dfe.chunk.js","sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux-saga/store\";\r\n\r\nimport \"./OrganizationInfo.css\";\r\n\r\nexport default function OrganizationInfo() {\r\n  const repos: any[] = useSelector(\r\n    (state: RootState) => state.repos.repositories\r\n  );\r\n\r\n  const isLoading = useSelector((state: RootState) => state.repos.isLoading);\r\n\r\n  if (repos.length !== 0 && !isLoading) {\r\n    return (\r\n      <div className=\"organization-info container flex-row\">\r\n        <div className=\"organization-info-inner flex-row\">\r\n          <div className=\"avatar-container\">\r\n            <img\r\n              className=\"avatar\"\r\n              src={repos[0].owner.avatar_url}\r\n              alt=\"avatar\"\r\n            />\r\n          </div>\r\n          <div className=\"organization-name\">{repos[0].owner.login}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nimport { IRepoState } from \"../helpers/types\";\r\n\r\nconst initialState: IRepoState = {\r\n  repositories: [],\r\n  isLoading: false,\r\n  fetchError: false\r\n};\r\n\r\nconst repoSlice = createSlice({\r\n  name: \"repos\",\r\n  initialState,\r\n  reducers: {\r\n    fetchDataRequest: (state) => {\r\n      return { ...state, isLoading: true, fetchError: false };\r\n    },\r\n    fetchDataSuccess: (state, action: PayloadAction<any>) => {\r\n      return {\r\n        ...state,\r\n        repositories: action.payload,\r\n        isLoading: false,\r\n        fetchError: false\r\n      };\r\n    },\r\n    fetchDataFail: (state) => {\r\n      return { ...state, repositories: [], fetchError: true, isLoading: false };\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  fetchDataFail,\r\n  fetchDataSuccess,\r\n  fetchDataRequest\r\n} = repoSlice.actions;\r\n\r\nexport default repoSlice.reducer;\r\n","import { ChangeEvent, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { BiSearch } from \"react-icons/all\";\r\n\r\nimport { AppDispatch } from \"../redux-saga/store\";\r\nimport { fetchDataRequest } from \"../redux-saga/repoSlice\";\r\n\r\nimport \"./SearchBar.css\";\r\n\r\nexport default function SearchBar() {\r\n  const [org, setOrg] = useState(\"\");\r\n\r\n  const dispatch: AppDispatch = useDispatch<AppDispatch>();\r\n\r\n  return (\r\n    <div className=\"search-bar flex-row centered\">\r\n      <form\r\n        className=\"flex-row\"\r\n        onSubmit={(e: ChangeEvent<HTMLFormElement>) => {\r\n          e.preventDefault();\r\n\r\n          if (org !== \"\") {\r\n            dispatch({ type: fetchDataRequest.type, payload: { org } });\r\n            setOrg(\"\");\r\n          }\r\n        }}\r\n      >\r\n        <input\r\n          className=\"search-bar-input\"\r\n          placeholder=\"Enter the organization name...\"\r\n          onChange={(e: ChangeEvent<HTMLInputElement>) => {\r\n            setOrg(e.target.value.trim());\r\n          }}\r\n        />\r\n\r\n        <button type=\"submit\" className=\"submit-button flex-row centered\">\r\n          <BiSearch className=\"submit-icon\" />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { GoRepoForked, AiOutlineEye, AiOutlineStar } from \"react-icons/all\";\r\n\r\nimport { IRepoModel } from \"../helpers/types\";\r\n\r\nexport default function Repository({\r\n  title,\r\n  url,\r\n  forksCount,\r\n  watchersCount,\r\n  starsCount\r\n}: IRepoModel) {\r\n  return (\r\n    <a href={url}>\r\n      <div className=\"container flex-column\" id=\"repository\">\r\n        <div className=\"repo-info repo-title\">{title}</div>\r\n        <div className=\"repo-info repo-url\">\r\n          <a className=\"repo-url\" href={url}>\r\n            {url}\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"repo-lower flex-row\">\r\n          <div className=\"repo-info flex-row centered repo-fork-count repo-count\">\r\n            <GoRepoForked className=\"repo-icon\" /> {forksCount}\r\n          </div>\r\n          <div className=\"repo-info flex-row centered repo-watchers-count repo-count\">\r\n            <AiOutlineEye className=\"repo-icon\" /> {watchersCount}\r\n          </div>\r\n          <div className=\"repo-info flex-row centered repo-star-count repo-count\">\r\n            <AiOutlineStar className=\"repo-icon\" /> {starsCount}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </a>\r\n  );\r\n}\r\n","import \"./LoadingSpinner.css\";\r\n\r\nexport default function LoadingSpinner() {\r\n  return (\r\n    <div className=\"loading-spinner-container\">\r\n      <div className=\"spinner\" />\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux-saga/store\";\r\n\r\nexport default function Error() {\r\n  const fetchError = useSelector((state: RootState) => state.repos.fetchError);\r\n\r\n  if (fetchError) {\r\n    return <div>An error occured while fetching.</div>;\r\n  } else {\r\n    return <span />;\r\n  }\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux-saga/store\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport Repository from \"./Repository\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\nimport Error from \"../helpers/Error\";\r\n\r\nimport \"./Repositories.css\";\r\n\r\nexport default function Repositories() {\r\n  const repos: any[] = useSelector(\r\n    (state: RootState) => state.repos.repositories\r\n  );\r\n\r\n  const isLoading = useSelector((state: RootState) => state.repos.isLoading);\r\n  const fetchError = useSelector((state: RootState) => state.repos.fetchError);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const reposPerPage = 6;\r\n\r\n  const lastRepo = currentPage * reposPerPage;\r\n  const firstRepo = lastRepo - reposPerPage;\r\n\r\n  const currentPageRepos = repos.slice(firstRepo, lastRepo);\r\n\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(repos.length / reposPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) setCurrentPage(1);\r\n  }, [isLoading]);\r\n\r\n  return (\r\n    <div className=\"container flex-column centered\" id=\"repositories\">\r\n      <Error />\r\n\r\n      {!isLoading ? (\r\n        currentPageRepos.map((repo: any) => (\r\n          <Repository\r\n            key={repo.id}\r\n            title={repo.name}\r\n            url={repo.html_url}\r\n            forksCount={repo.forks_count}\r\n            watchersCount={repo.watchers_count}\r\n            starsCount={repo.stargazers_count}\r\n          />\r\n        ))\r\n      ) : (\r\n        <LoadingSpinner />\r\n      )}\r\n\r\n      <div className=\"page-numbers-container flex-row centered\">\r\n        {!isLoading &&\r\n          !fetchError &&\r\n          pageNumbers.map((number) => {\r\n            return (\r\n              <div\r\n                key={number}\r\n                className={\r\n                  number !== currentPage ? \"page-number\" : \"page-number active\"\r\n                }\r\n                onClick={() => {\r\n                  setCurrentPage(number);\r\n                  window.scrollTo(0, 0);\r\n                }}\r\n              >\r\n                {number}\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios, { AxiosResponse } from \"axios\";\r\nimport { call, put, takeLatest } from \"redux-saga/effects\";\r\n\r\nimport { API_URL } from \"../helpers/consts\";\r\nimport { fetchDataFail, fetchDataSuccess, fetchDataRequest } from \"./repoSlice\";\r\nimport { IRepoAction } from \"../helpers/types\";\r\nimport { PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport function getReposRequest(org: string): Promise<AxiosResponse> {\r\n  return axios.get(`${API_URL}/orgs/${org}/repos`, {\r\n    headers: {\r\n      Accept: \"application/vnd.github.v3+json\"\r\n      // Authorization: `token ${process.env.TOKEN}`\r\n    }\r\n  });\r\n}\r\n\r\nexport function* getRepos(action: PayloadAction<IRepoAction>): Generator {\r\n  try {\r\n    const response: any = yield call(getReposRequest, action.payload.org);\r\n\r\n    yield put(fetchDataSuccess(response.data));\r\n  } catch (error) {\r\n    yield put({ type: fetchDataFail.type });\r\n  }\r\n}\r\n\r\nexport default function* saga() {\r\n  yield takeLatest(fetchDataRequest.type, getRepos);\r\n}\r\n","export const API_URL: string = \"https://api.github.com\";\r\n","import { configureStore, EnhancedStore } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware, { SagaMiddleware } from \"redux-saga\";\r\n\r\nimport repoSlice from \"./repoSlice\";\r\nimport saga from \"./saga\";\r\n\r\nconst sagaMiddleware: SagaMiddleware = createSagaMiddleware();\r\n\r\nconst store: EnhancedStore = configureStore({\r\n  reducer: {\r\n    repos: repoSlice\r\n  },\r\n  middleware: [sagaMiddleware]\r\n});\r\n\r\nexport default store;\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nsagaMiddleware.run(saga);\r\n","import { Provider } from \"react-redux\";\r\nimport * as dotenv from \"dotenv\";\r\n\r\nimport OrganizationInfo from \"./components/OrganizationInfo\";\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport Repositories from \"./components/Repositories\";\r\n\r\nimport store from \"./redux-saga/store\";\r\n\r\nimport \"./styles.css\";\r\n\r\ndotenv.config();\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"App flex-column centered\">\r\n        <div className=\"container main flex-column centered\">\r\n          <h1 className=\"header-text\">GITHUB REPO VIEWER</h1>\r\n          <SearchBar />\r\n          <OrganizationInfo />\r\n          <Repositories />\r\n        </div>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n","import { render } from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}